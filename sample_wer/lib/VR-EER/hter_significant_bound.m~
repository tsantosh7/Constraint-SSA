function [upper, lower, hter] = hter_significant_bound(far, frr, n_impostors, n_clients, alpha,test)
% [upper, lower, hter] = hter_significant_bound(far, frr, n_impostors, n_clients, alpha,test)
%
% INPUT:
% far and frr each has two values for the two systems to compare
% 1-alpha is the confidence interval
% e.g. alpha = 0.05 to specify 95% confidence interval desired
%
% test could be 1 for one-sided test; 2 for two-sided test
% one-sided test not implemented yet!
% for one-sided test:  hter(1) - hter(2). 
% Hence hter(1) > hter(2), so we try to test that 2 is better than 1
%
% OUTPUT:
% significant is a boolean variable: 
%     1 means significant
%     0 means not significant
% significant_level is the z value
%
% The output variable ci_percentage
% 100% confidence: affirm this;
% 50%  confidence: not sure at all
% 0%   confidence: contrary, 1 is better than 2

%the significant level is 95% by default
if nargin <5,
  alpha = 0.05;
end;
if nargin <6,
  test = 2; %two-sided test
end;

portion = 1-alpha/2;
%acutally the upper and lower bound is:
%portion = [alpha/2 1-alpha/2];

%the confidence interval
z = norminv(portion,0,1);

t1= (far .* (1 - far) ) ./ (4 .* n_impostors');
t2 = (frr .* (1 - frr) ) ./ (4 .* n_clients');
sigma  = sqrt(t1 + t2);

hter = ( far + frr ) ./ 2;
upper = hter + sigma * z;
lower = hter - sigma * z;